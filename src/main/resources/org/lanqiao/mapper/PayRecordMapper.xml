<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lanqiao.mapper.PayRecordMapper" >
  <resultMap id="BaseResultMap" type="org.lanqiao.entity.PayRecord" >
    <id column="payrecord_id" property="payrecordId" jdbcType="INTEGER" />
    <result column="payrecord_flag" property="payrecordFlag" jdbcType="VARCHAR" />
    <result column="payrecord_money" property="payrecordMoney" jdbcType="INTEGER" />
    <result column="payrecord_introduce" property="payrecordIntroduce" jdbcType="VARCHAR" />
    <result column="payrecord_date" property="payrecordDate" jdbcType="TIMESTAMP" />
    <result column="payrecord_user_id" property="payrecordUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    payrecord_id, payrecord_flag, payrecord_money, payrecord_introduce, payrecord_date, 
    payrecord_user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from payrecord
    where payrecord_id = #{payrecordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from payrecord
    where payrecord_id = #{payrecordId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.lanqiao.entity.PayRecord" >
    insert into payrecord (payrecord_id, payrecord_flag, payrecord_money, 
      payrecord_introduce, payrecord_date, payrecord_user_id
      )
    values (#{payrecordId,jdbcType=INTEGER}, #{payrecordFlag,jdbcType=VARCHAR}, #{payrecordMoney,jdbcType=INTEGER}, 
      #{payrecordIntroduce,jdbcType=VARCHAR}, #{payrecordDate,jdbcType=TIMESTAMP}, #{payrecordUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.lanqiao.entity.PayRecord" >
    insert into payrecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payrecordId != null" >
        payrecord_id,
      </if>
      <if test="payrecordFlag != null" >
        payrecord_flag,
      </if>
      <if test="payrecordMoney != null" >
        payrecord_money,
      </if>
      <if test="payrecordIntroduce != null" >
        payrecord_introduce,
      </if>
      <if test="payrecordDate != null" >
        payrecord_date,
      </if>
      <if test="payrecordUserId != null" >
        payrecord_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payrecordId != null" >
        #{payrecordId,jdbcType=INTEGER},
      </if>
      <if test="payrecordFlag != null" >
        #{payrecordFlag,jdbcType=VARCHAR},
      </if>
      <if test="payrecordMoney != null" >
        #{payrecordMoney,jdbcType=INTEGER},
      </if>
      <if test="payrecordIntroduce != null" >
        #{payrecordIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="payrecordDate != null" >
        #{payrecordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payrecordUserId != null" >
        #{payrecordUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.lanqiao.entity.PayRecord" >
    update payrecord
    <set >
      <if test="payrecordFlag != null" >
        payrecord_flag = #{payrecordFlag,jdbcType=VARCHAR},
      </if>
      <if test="payrecordMoney != null" >
        payrecord_money = #{payrecordMoney,jdbcType=INTEGER},
      </if>
      <if test="payrecordIntroduce != null" >
        payrecord_introduce = #{payrecordIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="payrecordDate != null" >
        payrecord_date = #{payrecordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payrecordUserId != null" >
        payrecord_user_id = #{payrecordUserId,jdbcType=INTEGER},
      </if>
    </set>
    where payrecord_id = #{payrecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lanqiao.entity.PayRecord" >
    update payrecord
    set payrecord_flag = #{payrecordFlag,jdbcType=VARCHAR},
      payrecord_money = #{payrecordMoney,jdbcType=INTEGER},
      payrecord_introduce = #{payrecordIntroduce,jdbcType=VARCHAR},
      payrecord_date = #{payrecordDate,jdbcType=TIMESTAMP},
      payrecord_user_id = #{payrecordUserId,jdbcType=INTEGER}
    where payrecord_id = #{payrecordId,jdbcType=INTEGER}
  </update>
</mapper>
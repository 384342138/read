<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lanqiao.mapper.ReadMapper" >
  <resultMap id="BaseResultMap" type="org.lanqiao.entity.Read" >
    <id column="read_id" property="readId" jdbcType="INTEGER" />
    <result column="read_user_id" property="readUserId" jdbcType="INTEGER" />
    <result column="read_book_id" property="readBookId" jdbcType="INTEGER" />
    <result column="read_chapter_id" property="readChapterId" jdbcType="INTEGER" />
    <result column="read_page_num" property="readPageNum" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="LeiReadChapterVoResultMap" type="org.lanqiao.vo.LeiReadChapterVo" >
    <id column="chapter_id" property="chapterId" jdbcType="INTEGER" />
    <result column="chapter_sort" property="chapterSort" jdbcType="INTEGER" />
    <result column="chapter_name" property="chapterName" jdbcType="VARCHAR" />
    <result column="content_text" property="contentText" jdbcType="VARCHAR" />
  </resultMap>


  <sql id="Base_Column_List" >
    read_id, read_user_id, read_book_id, read_chapter_id, read_page_num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from read
    where read_id = #{readId,jdbcType=INTEGER}
  </select>

  <select id="checkRecord" parameterType="java.lang.Integer" resultType="java.lang.Integer">
   SELECT COUNT(*) FROM `read` WHERE `read`.read_book_id=#{bookId} AND `read`.read_user_id=#{userId};
  </select>

  <select id="selectChapterUserId" parameterType="java.lang.Integer" resultMap="LeiReadChapterVoResultMap">
   SELECT ch.chapter_sort,ch.chapter_name,c.content_text
   FROM content c,chapter ch
   WHERE c.content_id=ch.chapter_content_id AND ch.chapter_id=
   (SELECT `read`.read_chapter_id FROM `read` WHERE `read`.read_book_id=#{bookId} AND `read`.read_user_id=#{userId});
  </select>


  <select id="selectChapterNoUserId" parameterType="java.lang.Integer" resultMap="LeiReadChapterVoResultMap">
    SELECT ch.chapter_id,ch.chapter_sort,ch.chapter_name,c.content_text
    FROM content c,chapter ch
    WHERE c.content_id=ch.chapter_content_id AND ch.chapter_sort=#{chapterId} AND ch.chapter_book_id=#{bookId};

  </select>

  <select id="selectReadPageNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
SELECT `read`.read_page_num FROM `read` WHERE `read`.read_book_id=#{bookId} AND `read`.read_user_id=#{userId};
  </select>

  <insert id="insertRecorder" parameterType="java.lang.Integer">
    INSERT `read`
    SET `read`.read_user_id=#{userId},`read`.read_book_id=#{bookId},`read`.read_chapter_id=
    (SELECT chapter_id FROM chapter WHERE chapter.chapter_book_id=#{bookId} AND chapter.chapter_sort=#{chapterId});
  </insert>

  <update id="updateRecorder" parameterType="java.lang.Integer">
    UPDATE `read`
    SET `read`.read_chapter_id=
    (SELECT chapter_id FROM chapter WHERE chapter.chapter_book_id=#{bookId} AND chapter.chapter_sort=#{chapterId})
    ,`read`.read_page_num=1
    WHERE `read`.read_user_id=#{userId} AND `read`.read_book_id=#{bookId};
  </update>

  <update id="updateReadPageNum" parameterType="java.lang.Integer">
    UPDATE `read`
    SET `read`.read_page_num=#{pageNum}
    WHERE `read`.read_user_id=#{userId} AND `read`.read_book_id=#{bookId};
  </update>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from read
    where read_id = #{readId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.lanqiao.entity.Read" >
    insert into read (read_id, read_user_id, read_book_id, 
      read_chapter_id, read_page_num)
    values (#{readId,jdbcType=INTEGER}, #{readUserId,jdbcType=INTEGER}, #{readBookId,jdbcType=INTEGER}, 
      #{readChapterId,jdbcType=INTEGER}, #{readPageNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.lanqiao.entity.Read" >
    insert into read
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="readId != null" >
        read_id,
      </if>
      <if test="readUserId != null" >
        read_user_id,
      </if>
      <if test="readBookId != null" >
        read_book_id,
      </if>
      <if test="readChapterId != null" >
        read_chapter_id,
      </if>
      <if test="readPageNum != null" >
        read_page_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="readId != null" >
        #{readId,jdbcType=INTEGER},
      </if>
      <if test="readUserId != null" >
        #{readUserId,jdbcType=INTEGER},
      </if>
      <if test="readBookId != null" >
        #{readBookId,jdbcType=INTEGER},
      </if>
      <if test="readChapterId != null" >
        #{readChapterId,jdbcType=INTEGER},
      </if>
      <if test="readPageNum != null" >
        #{readPageNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.lanqiao.entity.Read" >
    update read
    <set >
      <if test="readUserId != null" >
        read_user_id = #{readUserId,jdbcType=INTEGER},
      </if>
      <if test="readBookId != null" >
        read_book_id = #{readBookId,jdbcType=INTEGER},
      </if>
      <if test="readChapterId != null" >
        read_chapter_id = #{readChapterId,jdbcType=INTEGER},
      </if>
      <if test="readPageNum != null" >
        read_page_num = #{readPageNum,jdbcType=INTEGER},
      </if>
    </set>
    where read_id = #{readId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lanqiao.entity.Read" >
    update read
    set read_user_id = #{readUserId,jdbcType=INTEGER},
      read_book_id = #{readBookId,jdbcType=INTEGER},
      read_chapter_id = #{readChapterId,jdbcType=INTEGER},
      read_page_num = #{readPageNum,jdbcType=INTEGER}
    where read_id = #{readId,jdbcType=INTEGER}
  </update>
</mapper>